version: "3.7"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"

  kafka0: &broker-default
    image: confluentinc/cp-kafka:5.4.0
    ports:
      - "9092:9092"
    environment: &default-broker-env
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://kafka0:19092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka0:19092,EXTERNAL://localhost:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - zookeeper
  kafka1:
    <<: *broker-default
    ports:
      - "9093:9093"
    environment:
      <<: *default-broker-env
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "INTERNAL://kafka1:19093,EXTERNAL://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka1:19093,EXTERNAL://localhost:9093"
  kafka2:
    <<: *broker-default
    ports:
      - "9094:9094"
    environment:
      <<: *default-broker-env
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: "INTERNAL://kafka2:19094,EXTERNAL://:9094"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka2:19094,EXTERNAL://localhost:9094"

  kafka-cli:
    image: frser/kafka-cli
    environment:
      BOOTSTRAP_SERVER: kafka2:19094
      CREATE_TOPICS: >-
        cta_weather:5:3,
        cta_station_arrival:15:3,
        cta_station_turnstile:15:3,
        connect_cta_db_stations:1:3,
        cta_station_info:1:3
    depends_on:
      - kafka0
      - kafka1
      - kafka2

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092,PLAINTEXT://kafka1:19093,PLAINTEXT://kafka2:19094"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - kafka0
      - kafka1
      - kafka2

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.4.0
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092,PLAINTEXT://kafka1:19093,PLAINTEXT://kafka2:19094"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082/"
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081/"
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - schema-registry

  connect:
    image: confluentinc/cp-kafka-connect:5.4.0
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092,PLAINTEXT://kafka1:19093,PLAINTEXT://kafka2:19094"
      CONNECT_GROUP_ID: connect
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - schema-registry

  ksql:
    image: confluentinc/cp-ksql-server:5.4.0
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092,PLAINTEXT://kafka1:19093,PLAINTEXT://kafka2:19094"
      # KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_KSQL_QUERIES_FILE: /app/queries.sql
      KSQL_KSQL_SERVICE_ID: "ksql_service_docker"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081/"
    volumes:
      - ./consumers/ksql.sql:/app/queries.sql
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - schema-registry

  connect-ui:
    image: landoop/kafka-connect-ui:0.9.7
    ports:
      - "8084:8084"
    environment:
      PORT: "8084"
      PROXY: "true"
      CONNECT_URL: "http://connect:8083"
    depends_on:
      - connect

  topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    ports:
      - "8085:8085"
    environment:
      PORT: "8085"
      PROXY: "true"
      KAFKA_REST_PROXY_URL: "http://rest-proxy:8082"
    depends_on:
      - rest-proxy

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    ports:
      - "8086:8086"
    environment:
      PORT: "8086"
      PROXY: "true"
      SCHEMAREGISTRY_URL: "http://schema-registry:8081/"
    depends_on:
      - schema-registry

  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "cta_admin"
      POSTGRES_PASSWORD: "chicago"
      POSTGRES_DB: "cta"
    volumes:
      - ./producers/data/cta_stations.csv:/tmp/cta_stations.csv
      - ./load_stations.sql:/docker-entrypoint-initdb.d/load_stations.sql

  producers:
    build:
      context: ./
      dockerfile: ./producers/Dockerfile
    environment:
      BASE_PATH: "/app/producers/"
      STATION_DB_JDBC_URL: "jdbc:postgresql://postgres:5432/cta?user=cta_admin&password=chicago"
      KAFKA_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092,PLAINTEXT://kafka1:19093,PLAINTEXT://kafka2:19094"
      KAFKA_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_CONNECT_URL: "http://connect:8083"
      KAKFA_REST_PROXY_URL: "http://rest-proxy:8082"
    depends_on:
      - postgres
      - kafka-cli
      - schema-registry
      - connect
      - rest-proxy
